### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies"
fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies"
name: "NetworkPolicies"
nameWithType: "NetworkPolicies"
summary: "Default network policy of the namespace, specifying ingress and egress rules."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **NetworkPolicies**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicies?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicies&text=NetworkPolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.NetworkPolicies()"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.NetworkPolicies()"
  name: "NetworkPolicies()"
  nameWithType: "NetworkPolicies.NetworkPolicies()"
  summary: "Creates an instance of Network<wbr>Policies class."
  syntax: "public NetworkPolicies()"
  desc: "Creates an instance of NetworkPolicies class."
methods:
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.egress()"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.egress()"
  name: "egress()"
  nameWithType: "NetworkPolicies.egress()"
  summary: "Get the egress property: Egress policy for the network."
  syntax: "public PolicyRule egress()"
  desc: "Get the egress property: Egress policy for the network."
  returns:
    description: "the egress value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PolicyRule?alt=com.azure.resourcemanager.containerservice.models.PolicyRule&text=PolicyRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "NetworkPolicies.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Network<wbr>Policies from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NetworkPolicies fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the NetworkPolicies."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of NetworkPolicies from the JsonReader."
  returns:
    description: "An instance of NetworkPolicies if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicies?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicies&text=NetworkPolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.ingress()"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.ingress()"
  name: "ingress()"
  nameWithType: "NetworkPolicies.ingress()"
  summary: "Get the ingress property: Ingress policy for the network."
  syntax: "public PolicyRule ingress()"
  desc: "Get the ingress property: Ingress policy for the network."
  returns:
    description: "the ingress value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PolicyRule?alt=com.azure.resourcemanager.containerservice.models.PolicyRule&text=PolicyRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "NetworkPolicies.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.validate()"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.validate()"
  name: "validate()"
  nameWithType: "NetworkPolicies.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.withEgress(com.azure.resourcemanager.containerservice.models.PolicyRule)"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.withEgress(PolicyRule egress)"
  name: "withEgress(PolicyRule egress)"
  nameWithType: "NetworkPolicies.withEgress(PolicyRule egress)"
  summary: "Set the egress property: Egress policy for the network."
  parameters:
  - description: "the egress value to set."
    name: "egress"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PolicyRule?alt=com.azure.resourcemanager.containerservice.models.PolicyRule&text=PolicyRule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkPolicies withEgress(PolicyRule egress)"
  desc: "Set the egress property: Egress policy for the network."
  returns:
    description: "the NetworkPolicies object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicies?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicies&text=NetworkPolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.withIngress(com.azure.resourcemanager.containerservice.models.PolicyRule)"
  fullName: "com.azure.resourcemanager.containerservice.models.NetworkPolicies.withIngress(PolicyRule ingress)"
  name: "withIngress(PolicyRule ingress)"
  nameWithType: "NetworkPolicies.withIngress(PolicyRule ingress)"
  summary: "Set the ingress property: Ingress policy for the network."
  parameters:
  - description: "the ingress value to set."
    name: "ingress"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.PolicyRule?alt=com.azure.resourcemanager.containerservice.models.PolicyRule&text=PolicyRule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkPolicies withIngress(PolicyRule ingress)"
  desc: "Set the ingress property: Ingress policy for the network."
  returns:
    description: "the NetworkPolicies object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicies?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicies&text=NetworkPolicies\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Default network policy of the namespace, specifying ingress and egress rules."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.NetworkPolicies?alt=com.azure.resourcemanager.containerservice.models.NetworkPolicies&text=NetworkPolicies\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.56.0-beta.1

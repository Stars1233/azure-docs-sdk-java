### YamlMime:JavaType
uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile"
fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile"
name: "MachineOSProfile"
nameWithType: "MachineOSProfile"
summary: "The operating system and disk used by the machine."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **MachineOSProfile**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.MachineOSProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.MachineOSProfile()"
  name: "MachineOSProfile()"
  nameWithType: "MachineOSProfile.MachineOSProfile()"
  summary: "Creates an instance of Machine<wbr>OSProfile class."
  syntax: "public MachineOSProfile()"
  desc: "Creates an instance of MachineOSProfile class."
methods:
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.enableFips()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.enableFips()"
  name: "enableFips()"
  nameWithType: "MachineOSProfile.enableFips()"
  summary: "Get the enable<wbr>Fips property: Whether to use a FIPS-enabled OS."
  syntax: "public Boolean enableFips()"
  desc: "Get the enableFips property: Whether to use a FIPS-enabled OS."
  returns:
    description: "the enableFips value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "MachineOSProfile.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Machine<wbr>OSProfile from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MachineOSProfile fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the MachineOSProfile."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of MachineOSProfile from the JsonReader."
  returns:
    description: "An instance of MachineOSProfile if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.linuxProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.linuxProfile()"
  name: "linuxProfile()"
  nameWithType: "MachineOSProfile.linuxProfile()"
  summary: "Get the linux<wbr>Profile property: The Linux machine's specific profile."
  syntax: "public MachineOSProfileLinuxProfile linuxProfile()"
  desc: "Get the linuxProfile property: The Linux machine's specific profile."
  returns:
    description: "the linuxProfile value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfileLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfileLinuxProfile&text=MachineOSProfileLinuxProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osDiskSizeGB()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osDiskSizeGB()"
  name: "osDiskSizeGB()"
  nameWithType: "MachineOSProfile.osDiskSizeGB()"
  summary: "Get the os<wbr>Disk<wbr>SizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool."
  syntax: "public Integer osDiskSizeGB()"
  desc: "Get the osDiskSizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
  returns:
    description: "the osDiskSizeGB value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osDiskType()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osDiskType()"
  name: "osDiskType()"
  nameWithType: "MachineOSProfile.osDiskType()"
  summary: "Get the os<wbr>Disk<wbr>Type property: The OS disk type to be used for machines in the agent pool."
  syntax: "public OSDiskType osDiskType()"
  desc: "Get the osDiskType property: The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see \\[Ephemeral OS\\](https://docs.microsoft.com/azure/aks/cluster-configuration\\#ephemeral-os)."
  returns:
    description: "the osDiskType value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSDiskType?alt=com.azure.resourcemanager.containerservice.models.OSDiskType&text=OSDiskType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osSku()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osSku()"
  name: "osSku()"
  nameWithType: "MachineOSProfile.osSku()"
  summary: "Get the os<wbr>Sku property: Specifies the OS SKU used by the agent pool."
  syntax: "public OSSku osSku()"
  desc: "Get the osSku property: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated."
  returns:
    description: "the osSku value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSSku?alt=com.azure.resourcemanager.containerservice.models.OSSku&text=OSSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osType()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.osType()"
  name: "osType()"
  nameWithType: "MachineOSProfile.osType()"
  summary: "Get the os<wbr>Type property: Os<wbr>Type to be used to specify os type."
  syntax: "public OSType osType()"
  desc: "Get the osType property: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
  returns:
    description: "the osType value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSType?alt=com.azure.resourcemanager.containerservice.models.OSType&text=OSType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "MachineOSProfile.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.validate()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.validate()"
  name: "validate()"
  nameWithType: "MachineOSProfile.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.windowsProfile()"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.windowsProfile()"
  name: "windowsProfile()"
  nameWithType: "MachineOSProfile.windowsProfile()"
  summary: "Get the windows<wbr>Profile property: The Windows machine's specific profile."
  syntax: "public AgentPoolWindowsProfile windowsProfile()"
  desc: "Get the windowsProfile property: The Windows machine's specific profile."
  returns:
    description: "the windowsProfile value."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolWindowsProfile?alt=com.azure.resourcemanager.containerservice.models.AgentPoolWindowsProfile&text=AgentPoolWindowsProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withEnableFips(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withEnableFips(Boolean enableFips)"
  name: "withEnableFips(Boolean enableFips)"
  nameWithType: "MachineOSProfile.withEnableFips(Boolean enableFips)"
  summary: "Set the enable<wbr>Fips property: Whether to use a FIPS-enabled OS."
  parameters:
  - description: "the enableFips value to set."
    name: "enableFips"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public MachineOSProfile withEnableFips(Boolean enableFips)"
  desc: "Set the enableFips property: Whether to use a FIPS-enabled OS."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withLinuxProfile(com.azure.resourcemanager.containerservice.models.MachineOSProfileLinuxProfile)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withLinuxProfile(MachineOSProfileLinuxProfile linuxProfile)"
  name: "withLinuxProfile(MachineOSProfileLinuxProfile linuxProfile)"
  nameWithType: "MachineOSProfile.withLinuxProfile(MachineOSProfileLinuxProfile linuxProfile)"
  summary: "Set the linux<wbr>Profile property: The Linux machine's specific profile."
  parameters:
  - description: "the linuxProfile value to set."
    name: "linuxProfile"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfileLinuxProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfileLinuxProfile&text=MachineOSProfileLinuxProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MachineOSProfile withLinuxProfile(MachineOSProfileLinuxProfile linuxProfile)"
  desc: "Set the linuxProfile property: The Linux machine's specific profile."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsDiskSizeGB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsDiskSizeGB(Integer osDiskSizeGB)"
  name: "withOsDiskSizeGB(Integer osDiskSizeGB)"
  nameWithType: "MachineOSProfile.withOsDiskSizeGB(Integer osDiskSizeGB)"
  summary: "Set the os<wbr>Disk<wbr>SizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool."
  parameters:
  - description: "the osDiskSizeGB value to set."
    name: "osDiskSizeGB"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public MachineOSProfile withOsDiskSizeGB(Integer osDiskSizeGB)"
  desc: "Set the osDiskSizeGB property: OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsDiskType(com.azure.resourcemanager.containerservice.models.OSDiskType)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsDiskType(OSDiskType osDiskType)"
  name: "withOsDiskType(OSDiskType osDiskType)"
  nameWithType: "MachineOSProfile.withOsDiskType(OSDiskType osDiskType)"
  summary: "Set the os<wbr>Disk<wbr>Type property: The OS disk type to be used for machines in the agent pool."
  parameters:
  - description: "the osDiskType value to set."
    name: "osDiskType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSDiskType?alt=com.azure.resourcemanager.containerservice.models.OSDiskType&text=OSDiskType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MachineOSProfile withOsDiskType(OSDiskType osDiskType)"
  desc: "Set the osDiskType property: The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see \\[Ephemeral OS\\](https://docs.microsoft.com/azure/aks/cluster-configuration\\#ephemeral-os)."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsSku(com.azure.resourcemanager.containerservice.models.OSSku)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsSku(OSSku osSku)"
  name: "withOsSku(OSSku osSku)"
  nameWithType: "MachineOSProfile.withOsSku(OSSku osSku)"
  summary: "Set the os<wbr>Sku property: Specifies the OS SKU used by the agent pool."
  parameters:
  - description: "the osSku value to set."
    name: "osSku"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSSku?alt=com.azure.resourcemanager.containerservice.models.OSSku&text=OSSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MachineOSProfile withOsSku(OSSku osSku)"
  desc: "Set the osSku property: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsType(com.azure.resourcemanager.containerservice.models.OSType)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withOsType(OSType osType)"
  name: "withOsType(OSType osType)"
  nameWithType: "MachineOSProfile.withOsType(OSType osType)"
  summary: "Set the os<wbr>Type property: Os<wbr>Type to be used to specify os type."
  parameters:
  - description: "the osType value to set."
    name: "osType"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.OSType?alt=com.azure.resourcemanager.containerservice.models.OSType&text=OSType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MachineOSProfile withOsType(OSType osType)"
  desc: "Set the osType property: OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withWindowsProfile(com.azure.resourcemanager.containerservice.models.AgentPoolWindowsProfile)"
  fullName: "com.azure.resourcemanager.containerservice.models.MachineOSProfile.withWindowsProfile(AgentPoolWindowsProfile windowsProfile)"
  name: "withWindowsProfile(AgentPoolWindowsProfile windowsProfile)"
  nameWithType: "MachineOSProfile.withWindowsProfile(AgentPoolWindowsProfile windowsProfile)"
  summary: "Set the windows<wbr>Profile property: The Windows machine's specific profile."
  parameters:
  - description: "the windowsProfile value to set."
    name: "windowsProfile"
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.AgentPoolWindowsProfile?alt=com.azure.resourcemanager.containerservice.models.AgentPoolWindowsProfile&text=AgentPoolWindowsProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MachineOSProfile withWindowsProfile(AgentPoolWindowsProfile windowsProfile)"
  desc: "Set the windowsProfile property: The Windows machine's specific profile."
  returns:
    description: "the MachineOSProfile object itself."
    type: "<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The operating system and disk used by the machine."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.containerservice.models.MachineOSProfile?alt=com.azure.resourcemanager.containerservice.models.MachineOSProfile&text=MachineOSProfile\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.containerservice.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-containerservice:2.56.0-beta.1

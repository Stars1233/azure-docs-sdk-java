### YamlMime:JavaType
uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties"
fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties"
name: "DatabaseUpdateProperties"
nameWithType: "DatabaseUpdateProperties"
summary: "Redis Enterprise database update properties Properties for updating Redis Enterprise databases."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties&text=DatabaseCommonProperties\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.accessKeysAuthentication()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.accessKeysAuthentication&text=accessKeysAuthentication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.clientProtocol()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.clientProtocol&text=clientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.clusteringPolicy()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.clusteringPolicy&text=clusteringPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.deferUpgrade()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.deferUpgrade&text=deferUpgrade\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.evictionPolicy()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.evictionPolicy&text=evictionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.geoReplication()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.geoReplication&text=geoReplication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.modules()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.modules&text=modules\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.persistence()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.persistence&text=persistence\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.port()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.port&text=port\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.provisioningState()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.provisioningState&text=provisioningState\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.redisVersion()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.redisVersion&text=redisVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.resourceState()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.resourceState&text=resourceState\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.validate()?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withAccessKeysAuthentication(com.azure.resourcemanager.redisenterprise.models.AccessKeysAuthentication)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withAccessKeysAuthentication&text=withAccessKeysAuthentication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withClientProtocol(com.azure.resourcemanager.redisenterprise.models.Protocol)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withClientProtocol&text=withClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withClusteringPolicy(com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withClusteringPolicy&text=withClusteringPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withDeferUpgrade(com.azure.resourcemanager.redisenterprise.models.DeferUpgradeSetting)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withDeferUpgrade&text=withDeferUpgrade\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withEvictionPolicy(com.azure.resourcemanager.redisenterprise.models.EvictionPolicy)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withEvictionPolicy&text=withEvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withGeoReplication(com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withGeoReplication&text=withGeoReplication\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withModules(java.util.List<com.azure.resourcemanager.redisenterprise.models.Module>)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withModules&text=withModules\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withPersistence(com.azure.resourcemanager.redisenterprise.models.Persistence)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withPersistence&text=withPersistence\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withPort(java.lang.Integer)?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withPort&text=withPort\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DatabaseUpdateProperties**</br> extends <xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties?alt=com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties&text=DatabaseCommonProperties\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.DatabaseUpdateProperties()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.DatabaseUpdateProperties()"
  name: "DatabaseUpdateProperties()"
  nameWithType: "DatabaseUpdateProperties.DatabaseUpdateProperties()"
  summary: "Creates an instance of Database<wbr>Update<wbr>Properties class."
  syntax: "public DatabaseUpdateProperties()"
  desc: "Creates an instance of DatabaseUpdateProperties class."
methods:
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DatabaseUpdateProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Database<wbr>Update<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DatabaseUpdateProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the DatabaseUpdateProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DatabaseUpdateProperties from the JsonReader."
  returns:
    description: "An instance of DatabaseUpdateProperties if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.provisioningState()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.provisioningState()"
  name: "provisioningState()"
  nameWithType: "DatabaseUpdateProperties.provisioningState()"
  summary: "Get the provisioning<wbr>State property: Current provisioning status of the database."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.provisioningState()"
  syntax: "public ProvisioningState provisioningState()"
  desc: "Get the provisioningState property: Current provisioning status of the database."
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ProvisioningState?alt=com.azure.resourcemanager.redisenterprise.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.redisVersion()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.redisVersion()"
  name: "redisVersion()"
  nameWithType: "DatabaseUpdateProperties.redisVersion()"
  summary: "Get the redis<wbr>Version property: Version of Redis the database is running on, e.<wbr>g."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.redisVersion()"
  syntax: "public String redisVersion()"
  desc: "Get the redisVersion property: Version of Redis the database is running on, e.g. '6.0'."
  returns:
    description: "the redisVersion value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.resourceState()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.resourceState()"
  name: "resourceState()"
  nameWithType: "DatabaseUpdateProperties.resourceState()"
  summary: "Get the resource<wbr>State property: Current resource status of the database."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.resourceState()"
  syntax: "public ResourceState resourceState()"
  desc: "Get the resourceState property: Current resource status of the database."
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ResourceState?alt=com.azure.resourcemanager.redisenterprise.models.ResourceState&text=ResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DatabaseUpdateProperties.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.validate()"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.validate()"
  name: "validate()"
  nameWithType: "DatabaseUpdateProperties.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withAccessKeysAuthentication(com.azure.resourcemanager.redisenterprise.models.AccessKeysAuthentication)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withAccessKeysAuthentication(AccessKeysAuthentication accessKeysAuthentication)"
  name: "withAccessKeysAuthentication(AccessKeysAuthentication accessKeysAuthentication)"
  nameWithType: "DatabaseUpdateProperties.withAccessKeysAuthentication(AccessKeysAuthentication accessKeysAuthentication)"
  summary: "Set the access<wbr>Keys<wbr>Authentication property: This property can be Enabled/Disabled to allow or deny access with the current access keys."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withAccessKeysAuthentication(com.azure.resourcemanager.redisenterprise.models.AccessKeysAuthentication)"
  parameters:
  - name: "accessKeysAuthentication"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.AccessKeysAuthentication?alt=com.azure.resourcemanager.redisenterprise.models.AccessKeysAuthentication&text=AccessKeysAuthentication\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withAccessKeysAuthentication(AccessKeysAuthentication accessKeysAuthentication)"
  desc: "Set the accessKeysAuthentication property: This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withClientProtocol(com.azure.resourcemanager.redisenterprise.models.Protocol)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withClientProtocol(Protocol clientProtocol)"
  name: "withClientProtocol(Protocol clientProtocol)"
  nameWithType: "DatabaseUpdateProperties.withClientProtocol(Protocol clientProtocol)"
  summary: "Set the client<wbr>Protocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withClientProtocol(com.azure.resourcemanager.redisenterprise.models.Protocol)"
  parameters:
  - name: "clientProtocol"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Protocol?alt=com.azure.resourcemanager.redisenterprise.models.Protocol&text=Protocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withClientProtocol(Protocol clientProtocol)"
  desc: "Set the clientProtocol property: Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withClusteringPolicy(com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  name: "withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  nameWithType: "DatabaseUpdateProperties.withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  summary: "Set the clustering<wbr>Policy property: Clustering policy - default is OSSCluster."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withClusteringPolicy(com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy)"
  parameters:
  - name: "clusteringPolicy"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy?alt=com.azure.resourcemanager.redisenterprise.models.ClusteringPolicy&text=ClusteringPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withClusteringPolicy(ClusteringPolicy clusteringPolicy)"
  desc: "Set the clusteringPolicy property: Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withDeferUpgrade(com.azure.resourcemanager.redisenterprise.models.DeferUpgradeSetting)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withDeferUpgrade(DeferUpgradeSetting deferUpgrade)"
  name: "withDeferUpgrade(DeferUpgradeSetting deferUpgrade)"
  nameWithType: "DatabaseUpdateProperties.withDeferUpgrade(DeferUpgradeSetting deferUpgrade)"
  summary: "Set the defer<wbr>Upgrade property: Option to defer upgrade when newest version is released - default is Not<wbr>Deferred."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withDeferUpgrade(com.azure.resourcemanager.redisenterprise.models.DeferUpgradeSetting)"
  parameters:
  - name: "deferUpgrade"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DeferUpgradeSetting?alt=com.azure.resourcemanager.redisenterprise.models.DeferUpgradeSetting&text=DeferUpgradeSetting\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withDeferUpgrade(DeferUpgradeSetting deferUpgrade)"
  desc: "Set the deferUpgrade property: Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withEvictionPolicy(com.azure.resourcemanager.redisenterprise.models.EvictionPolicy)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withEvictionPolicy(EvictionPolicy evictionPolicy)"
  name: "withEvictionPolicy(EvictionPolicy evictionPolicy)"
  nameWithType: "DatabaseUpdateProperties.withEvictionPolicy(EvictionPolicy evictionPolicy)"
  summary: "Set the eviction<wbr>Policy property: Redis eviction policy - default is VolatileLRU."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withEvictionPolicy(com.azure.resourcemanager.redisenterprise.models.EvictionPolicy)"
  parameters:
  - name: "evictionPolicy"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.EvictionPolicy?alt=com.azure.resourcemanager.redisenterprise.models.EvictionPolicy&text=EvictionPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withEvictionPolicy(EvictionPolicy evictionPolicy)"
  desc: "Set the evictionPolicy property: Redis eviction policy - default is VolatileLRU."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withGeoReplication(com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  name: "withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  nameWithType: "DatabaseUpdateProperties.withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  summary: "Set the geo<wbr>Replication property: Optional set of properties to configure geo replication for this database."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withGeoReplication(com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication)"
  parameters:
  - name: "geoReplication"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication?alt=com.azure.resourcemanager.redisenterprise.models.DatabasePropertiesGeoReplication&text=DatabasePropertiesGeoReplication\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withGeoReplication(DatabasePropertiesGeoReplication geoReplication)"
  desc: "Set the geoReplication property: Optional set of properties to configure geo replication for this database."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withModules(java.util.List<com.azure.resourcemanager.redisenterprise.models.Module>)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withModules(List<Module> modules)"
  name: "withModules(List<Module> modules)"
  nameWithType: "DatabaseUpdateProperties.withModules(List<Module> modules)"
  summary: "Set the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withModules(java.util.List<com.azure.resourcemanager.redisenterprise.models.Module>)"
  parameters:
  - name: "modules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.redisenterprise.models.Module?alt=com.azure.resourcemanager.redisenterprise.models.Module&text=Module\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public DatabaseUpdateProperties withModules(List<Module> modules)"
  desc: "Set the modules property: Optional set of redis modules to enable in this database - modules can only be added at creation time."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withPersistence(com.azure.resourcemanager.redisenterprise.models.Persistence)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withPersistence(Persistence persistence)"
  name: "withPersistence(Persistence persistence)"
  nameWithType: "DatabaseUpdateProperties.withPersistence(Persistence persistence)"
  summary: "Set the persistence property: Persistence settings."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withPersistence(com.azure.resourcemanager.redisenterprise.models.Persistence)"
  parameters:
  - name: "persistence"
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.models.Persistence?alt=com.azure.resourcemanager.redisenterprise.models.Persistence&text=Persistence\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DatabaseUpdateProperties withPersistence(Persistence persistence)"
  desc: "Set the persistence property: Persistence settings."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withPort(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties.withPort(Integer port)"
  name: "withPort(Integer port)"
  nameWithType: "DatabaseUpdateProperties.withPort(Integer port)"
  summary: "Set the port property: TCP port of the database endpoint."
  overridden: "com.azure.resourcemanager.redisenterprise.models.DatabaseCommonProperties.withPort(java.lang.Integer)"
  parameters:
  - name: "port"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public DatabaseUpdateProperties withPort(Integer port)"
  desc: "Set the port property: TCP port of the database endpoint. Specified at create time. Defaults to an available port."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties?alt=com.azure.resourcemanager.redisenterprise.fluent.models.DatabaseUpdateProperties&text=DatabaseUpdateProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Redis Enterprise database update properties Properties for updating Redis Enterprise databases."
metadata: {}
package: "com.azure.resourcemanager.redisenterprise.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redisenterprise:2.1.0

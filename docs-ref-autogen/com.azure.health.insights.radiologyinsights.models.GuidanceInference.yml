### YamlMime:JavaType
uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference"
fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference"
name: "GuidanceInference"
nameWithType: "GuidanceInference"
summary: "A guidance inference collects structured information about a specific finding in the report and can possibly propose appropriate follow-up recommendations, based upon established, evidence-based best practices i.<wbr>e."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference&text=RadiologyInsightsInference\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.fromJson(com.azure.json.JsonReader)?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.getExtension()?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.getExtension&text=getExtension\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.getKind()?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.getKind&text=getKind\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.toJson(com.azure.json.JsonWriter)?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **GuidanceInference**</br> extends <xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference&text=RadiologyInsightsInference\" data-throw-if-not-resolved=\"False\" />"
methods:
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "GuidanceInference.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Guidance<wbr>Inference from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static GuidanceInference fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of GuidanceInference from the JsonReader."
  returns:
    description: "An instance of GuidanceInference if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.GuidanceInference?alt=com.azure.health.insights.radiologyinsights.models.GuidanceInference&text=GuidanceInference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getFinding()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getFinding()"
  name: "getFinding()"
  nameWithType: "GuidanceInference.getFinding()"
  summary: "Get the finding property: The finding associated with the guidance."
  syntax: "public FindingInference getFinding()"
  desc: "Get the finding property: The finding associated with the guidance."
  returns:
    description: "the finding value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.FindingInference?alt=com.azure.health.insights.radiologyinsights.models.FindingInference&text=FindingInference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getIdentifier()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getIdentifier()"
  name: "getIdentifier()"
  nameWithType: "GuidanceInference.getIdentifier()"
  summary: "Get the identifier property: The guidance identifier, as a concept."
  syntax: "public FhirR4CodeableConcept getIdentifier()"
  desc: "Get the identifier property: The guidance identifier, as a concept."
  returns:
    description: "the identifier value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.FhirR4CodeableConcept?alt=com.azure.health.insights.radiologyinsights.models.FhirR4CodeableConcept&text=FhirR4CodeableConcept\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getKind()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getKind()"
  name: "getKind()"
  nameWithType: "GuidanceInference.getKind()"
  summary: "Get the kind property: Discriminator property for Radiology<wbr>Insights<wbr>Inference."
  overridden: "com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.getKind()"
  syntax: "public RadiologyInsightsInferenceType getKind()"
  desc: "Get the kind property: Discriminator property for RadiologyInsightsInference."
  returns:
    description: "the kind value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInferenceType?alt=com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInferenceType&text=RadiologyInsightsInferenceType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getMissingGuidanceInformation()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getMissingGuidanceInformation()"
  name: "getMissingGuidanceInformation()"
  nameWithType: "GuidanceInference.getMissingGuidanceInformation()"
  summary: "Get the missing<wbr>Guidance<wbr>Information property: Contains all missing items that are needed to determine follow-up."
  syntax: "public List<String> getMissingGuidanceInformation()"
  desc: "Get the missingGuidanceInformation property: Contains all missing items that are needed to determine follow-up."
  returns:
    description: "the missingGuidanceInformation value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getPresentGuidanceInformation()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getPresentGuidanceInformation()"
  name: "getPresentGuidanceInformation()"
  nameWithType: "GuidanceInference.getPresentGuidanceInformation()"
  summary: "Get the present<wbr>Guidance<wbr>Information property: present<wbr>Guidance<wbr>Information lists each item of the structured information (e.<wbr>g."
  syntax: "public List<PresentGuidanceInformation> getPresentGuidanceInformation()"
  desc: "Get the presentGuidanceInformation property: presentGuidanceInformation lists each item of the structured information (e.g. laterality) and corresponding details (left, right, bilateral) that is present in the document."
  returns:
    description: "the presentGuidanceInformation value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.PresentGuidanceInformation?alt=com.azure.health.insights.radiologyinsights.models.PresentGuidanceInformation&text=PresentGuidanceInformation\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getRanking()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getRanking()"
  name: "getRanking()"
  nameWithType: "GuidanceInference.getRanking()"
  summary: "Get the ranking property: See doc of Guidance<wbr>Ranking<wbr>Type."
  syntax: "public GuidanceRankingType getRanking()"
  desc: "Get the ranking property: See doc of GuidanceRankingType."
  returns:
    description: "the ranking value."
    type: "<xref href=\"com.azure.health.insights.radiologyinsights.models.GuidanceRankingType?alt=com.azure.health.insights.radiologyinsights.models.GuidanceRankingType&text=GuidanceRankingType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getRecommendationProposals()"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.getRecommendationProposals()"
  name: "getRecommendationProposals()"
  nameWithType: "GuidanceInference.getRecommendationProposals()"
  summary: "Get the recommendation<wbr>Proposals property: The proposed follow-up recommendations, if any."
  syntax: "public List<FollowupRecommendationInference> getRecommendationProposals()"
  desc: "Get the recommendationProposals property: The proposed follow-up recommendations, if any. If this is filled, missingGuidanceInformation cannot be filled (and vice versa)."
  returns:
    description: "the recommendationProposals value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.health.insights.radiologyinsights.models.FollowupRecommendationInference?alt=com.azure.health.insights.radiologyinsights.models.FollowupRecommendationInference&text=FollowupRecommendationInference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.health.insights.radiologyinsights.models.GuidanceInference.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "GuidanceInference.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.health.insights.radiologyinsights.models.RadiologyInsightsInference.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A guidance inference collects structured information about a specific finding in the report and can possibly propose appropriate follow-up recommendations, based upon established, evidence-based best practices i.e. ACR guidelines."
metadata: {}
package: "com.azure.health.insights.radiologyinsights.models"
artifact: com.azure:azure-health-insights-radiologyinsights:1.1.5

### YamlMime:JavaType
uid: "com.azure.resourcemanager.elastic.models.ProjectDetails"
fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails"
name: "ProjectDetails"
nameWithType: "ProjectDetails"
summary: "Project details of the monitor resource IF it belongs to Serverless offer kind."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ProjectDetails**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.elastic.models.ProjectDetails?alt=com.azure.resourcemanager.elastic.models.ProjectDetails&text=ProjectDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.ProjectDetails()"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.ProjectDetails()"
  name: "ProjectDetails()"
  nameWithType: "ProjectDetails.ProjectDetails()"
  summary: "Creates an instance of Project<wbr>Details class."
  syntax: "public ProjectDetails()"
  desc: "Creates an instance of ProjectDetails class."
methods:
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.configurationType()"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.configurationType()"
  name: "configurationType()"
  nameWithType: "ProjectDetails.configurationType()"
  summary: "Get the configuration<wbr>Type property: Configuration type of the Elasticsearch project."
  syntax: "public ConfigurationType configurationType()"
  desc: "Get the configurationType property: Configuration type of the Elasticsearch project."
  returns:
    description: "the configurationType value."
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ConfigurationType?alt=com.azure.resourcemanager.elastic.models.ConfigurationType&text=ConfigurationType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "ProjectDetails.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Project<wbr>Details from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ProjectDetails fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the ProjectDetails."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of ProjectDetails from the JsonReader."
  returns:
    description: "An instance of ProjectDetails if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ProjectDetails?alt=com.azure.resourcemanager.elastic.models.ProjectDetails&text=ProjectDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.projectType()"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.projectType()"
  name: "projectType()"
  nameWithType: "ProjectDetails.projectType()"
  summary: "Get the project<wbr>Type property: Project type; ex: Elasticsearch / Observability / Security."
  syntax: "public ProjectType projectType()"
  desc: "Get the projectType property: Project type; ex: Elasticsearch / Observability / Security."
  returns:
    description: "the projectType value."
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ProjectType?alt=com.azure.resourcemanager.elastic.models.ProjectType&text=ProjectType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "ProjectDetails.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.validate()"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.validate()"
  name: "validate()"
  nameWithType: "ProjectDetails.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.withConfigurationType(com.azure.resourcemanager.elastic.models.ConfigurationType)"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.withConfigurationType(ConfigurationType configurationType)"
  name: "withConfigurationType(ConfigurationType configurationType)"
  nameWithType: "ProjectDetails.withConfigurationType(ConfigurationType configurationType)"
  summary: "Set the configuration<wbr>Type property: Configuration type of the Elasticsearch project."
  parameters:
  - description: "the configurationType value to set."
    name: "configurationType"
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ConfigurationType?alt=com.azure.resourcemanager.elastic.models.ConfigurationType&text=ConfigurationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProjectDetails withConfigurationType(ConfigurationType configurationType)"
  desc: "Set the configurationType property: Configuration type of the Elasticsearch project."
  returns:
    description: "the ProjectDetails object itself."
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ProjectDetails?alt=com.azure.resourcemanager.elastic.models.ProjectDetails&text=ProjectDetails\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.elastic.models.ProjectDetails.withProjectType(com.azure.resourcemanager.elastic.models.ProjectType)"
  fullName: "com.azure.resourcemanager.elastic.models.ProjectDetails.withProjectType(ProjectType projectType)"
  name: "withProjectType(ProjectType projectType)"
  nameWithType: "ProjectDetails.withProjectType(ProjectType projectType)"
  summary: "Set the project<wbr>Type property: Project type; ex: Elasticsearch / Observability / Security."
  parameters:
  - description: "the projectType value to set."
    name: "projectType"
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ProjectType?alt=com.azure.resourcemanager.elastic.models.ProjectType&text=ProjectType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ProjectDetails withProjectType(ProjectType projectType)"
  desc: "Set the projectType property: Project type; ex: Elasticsearch / Observability / Security."
  returns:
    description: "the ProjectDetails object itself."
    type: "<xref href=\"com.azure.resourcemanager.elastic.models.ProjectDetails?alt=com.azure.resourcemanager.elastic.models.ProjectDetails&text=ProjectDetails\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Project details of the monitor resource IF it belongs to Serverless offer kind."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.elastic.models.ProjectDetails?alt=com.azure.resourcemanager.elastic.models.ProjectDetails&text=ProjectDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.elastic.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-elastic:1.1.0
